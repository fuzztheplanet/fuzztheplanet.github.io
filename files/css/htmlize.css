/* Styles for formatting source code blocks */
.org-src-container, .example {
    font-family: Lucida Console,monospace;
    font-size: 80%;
    margin: 1em auto;
    padding: .1em .5em;
    position: relative;
}

.src {
    background-color: #373737;
    color: #ffffff;
    margin: 0;
    padding: 1em;
}

.org-src-container>pre {
    overflow: auto;
}

.org-src-container>pre:before {
    display: block;
    position: absolute;
    background-color:#b3b3b3;
    top: 0;
    right: 0;
    padding: 0 0.5em;
    border-bottom-left-radius: 8px;
    border: 0;
    color: #ffffff;
    font-size: 80%;
}

/* Class names for source code syntax highlight generated by emacs' htmlize */
.org-builtin           { color: #ff22ff; }
.org-comment           { color: #ff9900; }
.org-comment-delimiter { color: #ff9900; }
.org-keyword           { color: #00ffff; }
.org-php-function-call { color: #40ff40; }
.org-php-string        { color: #ff4040; }
.org-string            { color: #ff4040; }
.org-type              { color: #40ffff; }
.org-variable-name     { color: #40ff40; }

/* Language name display for source code blocks. More languages here: */
/* https://orgmode.org/worg/org-contrib/babel/languages/index.html */
.org-src-container>pre.src-C:before                   { content:"C" }
.org-src-container>pre.src-Caml:before                { content:"Objective" }
.org-src-container>pre.src-D:before                   { content:"D" }
.org-src-container>pre.src-F90:before                 { content:"Fortran" }
.org-src-container>pre.src-Flavored Erlang lfe:before { content:"LFE" }
.org-src-container>pre.src-ML sml:before              { content:"Standard" }
.org-src-container>pre.src-R:before                   { content:"R" }
.org-src-container>pre.src-Translate translate:before { content:"Google" }
.org-src-container>pre.src-asymptote:before           { content:"Asymptote" }
.org-src-container>pre.src-awk:before                 { content:"Awk" }
.org-src-container>pre.src-axiom:before               { content:"Axiom" }
.org-src-container>pre.src-bash:before                { content:"Bash" }
.org-src-container>pre.src-browser:before             { content:"HTML" }
.org-src-container>pre.src-c:before                   { content:"C" }
.org-src-container>pre.src-calc:before                { content:"Calc" }
.org-src-container>pre.src-clojure:before             { content:"Clojure" }
.org-src-container>pre.src-comint:before              { content:"comint" }
.org-src-container>pre.src-cpp:before                 { content:"C++" }
.org-src-container>pre.src-css:before                 { content:"CSS" }
.org-src-container>pre.src-cypher:before              { content:"Neo4j" }
.org-src-container>pre.src-ditaa:before               { content:"Ditaa" }
.org-src-container>pre.src-dot:before                 { content:"Dot" }
.org-src-container>pre.src-ebnf:before                { content:"ebnf" }
.org-src-container>pre.src-elixir:before              { content:"Elixir" }
.org-src-container>pre.src-emacs-lisp:before          { content:"Elisp" }
.org-src-container>pre.src-forth:before               { content:"Forth" }
.org-src-container>pre.src-gnuplot:before             { content:"Gnuplot" }
.org-src-container>pre.src-haskell:before             { content:"Haskell" }
.org-src-container>pre.src-html:before                { content:"HTML" }
.org-src-container>pre.src-io:before                  { content:"Io" }
.org-src-container>pre.src-ipython:before             { content:"iPython" }
.org-src-container>pre.src-java:before                { content:"Java" }
.org-src-container>pre.src-javascript:before,
.org-src-container>pre.src-js:before                  { content:"Javascript" }
.org-src-container>pre.src-kotlin:before              { content:"Kotlin" }
.org-src-container>pre.src-latex:before               { content:"LaTeX" }
.org-src-container>pre.src-ledger:before              { content:"Ledger" }
.org-src-container>pre.src-lisp:before                { content:"Lisp" }
.org-src-container>pre.src-ly:before                  { content:"Lilypond" }
.org-src-container>pre.src-makefile:before            { content:"Makefile" }
.org-src-container>pre.src-matlab:before              { content:"Matlab" }
.org-src-container>pre.src-max:before                 { content:"Maxima" }
.org-src-container>pre.src-mongo:before               { content:"MongoDB" }
.org-src-container>pre.src-mscgen:before              { content:"Mscgen" }
.org-src-container>pre.src-octave:before              { content:"Octave" }
.org-src-container>pre.src-org:before                 { content:"Org" }
.org-src-container>pre.src-perl:before                { content:"Perl" }
.org-src-container>pre.src-picolisp:before            { content:"Picolisp" }
.org-src-container>pre.src-plantuml:before            { content:"PlantUML" }
.org-src-container>pre.src-prolog:before              { content:"Prolog" }
.org-src-container>pre.src-python:before              { content:"Python" }
.org-src-container>pre.src-rec:before                 { content:"rec" }
.org-src-container>pre.src-request:before             { content:"HTTP" }
.org-src-container>pre.src-ruby:before                { content:"Ruby" }
.org-src-container>pre.src-rust:before                { content:"Rust" }
.org-src-container>pre.src-sass:before                { content:"Sass" }
.org-src-container>pre.src-scala:before               { content:"Scala" }
.org-src-container>pre.src-scheme:before              { content:"Scheme" }
.org-src-container>pre.src-screen:before              { content:"Screen" }
.org-src-container>pre.src-sed:before                 { content:"Sed" }
.org-src-container>pre.src-sh:before,
.org-src-container>pre.src-shell:before               { content:"Shell" }
.org-src-container>pre.src-shen:before                { content:"Shen" }
.org-src-container>pre.src-sql:before                 { content:"SQL" }
.org-src-container>pre.src-sqlite:before              { content:"SQLite" }
.org-src-container>pre.src-stan:before                { content:"Stan" }
.org-src-container>pre.src-typescript:before          { content:"Typescript" }
.org-src-container>pre.src-vala:before                { content:"Vala" }
